/* Breakpoints are defined according to design breaks */
/* Safari is not supported, IE is not properly responsive. I know how to target Safari with JS or PHP, and then write style tweaks for it, and how to get IE responsive, but I don't have the time to do it right now. An update is expected in a couple of months, which will  fix a few issues including enabling horizontal slide-scrolling and vertical scrolling of vertically overflowing divs regardless of pointer position, IE responsiveness and Safari support. */
@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  .slideshow__slide {
    -webkit-transform: translate(0%, -50%);
    transform: translate(0%, -50%); } }

@media only screen and (min-width: 150em) {
  html {
    font-size: 181.25%; } }

@media only screen and (max-width: 149em) {
  html {
    font-size: 175%; } }

@media only screen and (max-width: 139em) {
  html {
    font-size: 168.75%; } }

@media only screen and (max-width: 137em) {
  html {
    font-size: 162.5%; } }

@media only screen and (max-width: 130em) {
  html {
    font-size: 156.25%; } }

@media only screen and (max-width: 125em) {
  html {
    font-size: 150%; } }

@media only screen and (max-width: 120em) {
  html {
    font-size: 143.75%; } }

@media only screen and (max-width: 115em) {
  html {
    font-size: 137.5%; } }

@media only screen and (max-width: 111em) {
  html {
    font-size: 131.25%; } }

@media only screen and (max-width: 106em) {
  html {
    font-size: 125%; } }

@media only screen and (max-width: 101em) {
  html {
    font-size: 118.75%; } }

@media only screen and (max-width: 96em) {
  html {
    font-size: 112.5%; } }

@media only screen and (max-width: 92em) {
  html {
    font-size: 106.25%; } }

@media only screen and (max-width: 87em) {
  html {
    font-size: 100%; } }

@media only screen and (max-width: 82em) {
  html {
    font-size: 93.75%; } }

@media only screen and (max-width: 77em) {
  html {
    font-size: 87.5%; } }

@media only screen and (max-width: 71em) {
  html {
    font-size: 81.25%; } }

@media only screen and (max-width: 69em) {
  .form__messages-error {
    -webkit-transform: translateX(22.25%);
    transform: translateX(22.25%); } }

@media only screen and (max-width: 67em) {
  html {
    font-size: 75%; }
  .header__description {
    top: 48vh; } }

@media only screen and (max-width: 66em) {
  .form__messages-error {
    -webkit-transform: translateX(3%);
    transform: translateX(3%); } }

@media only screen and (max-width: 62em) {
  html {
    font-size: 68.75%; }
  .header a {
    font-size: 1.5rem; }
  .header__navigation ul {
    padding-top: 0;
    padding-bottom: 0; }
  .header__information {
    padding-bottom: 0; }
  .header__slides {
    padding-top: 0; }
  .header__slides a {
    font-size: 1.2rem; }
  .header__copyright {
    font-size: 1.2rem;
    padding-top: 0; }
  .header__copyright a {
    display: block;
    font-size: 1.5rem; }
  .slideshow__prev-slide {
    width: 20vw;
    min-width: 20vw; }
  .slideshow__all-slides {
    width: 25vw;
    min-width: 25vw; }
  .row {
    margin-left: -20vw; }
  .row-1::before {
    font-size: 1.5rem; }
  .row-2::before {
    font-size: 1.5rem; }
  .row-3-col {
    display: none; }
  .row-2-col {
    display: block; }
  .post__picture {
    width: 68vw;
    -webkit-transform: translateX(-11%);
    transform: translateX(-11%); }
  .post__content {
    width: 68vw;
    -webkit-transform: translateX(-11%);
    transform: translateX(-11%); }
  .post__title {
    font-size: 2.5rem; }
  .post__text {
    font-size: 1.25rem; }
  .post__buttons {
    -webkit-transform: translateX(-11.5%);
    transform: translateX(-11.5%); }
  .post__share {
    font-size: 2rem; }
  .post__shared {
    font-size: 2rem; }
  .profile {
    font-size: 2rem;
    right: -6vw; }
  .profile__image {
    display: inline-block;
    width: 68vw;
    height: auto; }
  .profile__picture {
    margin-left: 0; }
  .profile__description {
    width: 68vw;
    font-size: 1.4rem;
    margin-left: 0; }
  .profile__title {
    margin-top: 1vh;
    margin-bottom: .5vh;
    font-size: 1.8rem; }
  .form {
    font-size: 2rem; }
  .form__messages {
    font-size: 2rem; }
  input[type=text],
  input[type=email],
  select,
  textarea {
    font-size: 2rem; }
  label {
    font-size: 2rem; }
  input[type=submit] {
    display: block;
    font-size: 2rem;
    padding: 0 3rem 3rem 0; }
  textarea {
    -webkit-transform: translateX(-12%);
    transform: translateX(-12%); }
  .form__messages {
    font-size: 2rem; }
  .form__messages-error {
    -webkit-transform: translateX(28.5%);
    transform: translateX(28.5%); } }

@media only screen and (max-width: 58em) {
  .profile__picture {
    text-align: center; }
  .profile__image {
    display: inline-block;
    margin-left: -12%; } }

@media only screen and (max-width: 56em) {
  html {
    font-size: 62.5%; }
  .images {
    margin-left: 3.6rem; }
  .slideshow__slide {
    margin-left: -3.6rem; }
  .slideshow__next-slide {
    margin-left: -3.6rem; }
  .slideshow__prev-slide {
    margin-left: -3.6rem; }
  .slideshow__all-slides {
    margin-left: -3.6rem; }
  .gallery__thumbnail,
  .gallery__thumbnail-ps {
    margin: 2rem;
    height: 30vh; }
  .row {
    margin-left: -22vw; } }

@media only screen and (max-width: 54em) {
  .row {
    margin-left: -24vw; } }

@media only screen and (max-width: 51em) {
  html {
    font-size: 56.25%; }
  .images {
    margin-left: 8rem; }
  .slideshow__slide {
    margin-left: -8rem; }
  .row {
    margin-left: -34vw; } }

@media only screen and (max-width: 46em) {
  html {
    font-size: 50%; }
  .images {
    margin-left: 12rem; }
  .row {
    margin-left: -40vw; }
  .slideshow__picture {
    margin-left: -4vw; }
  textarea {
    -webkit-transform: translateX(-13%);
    transform: translateX(-13%); }
  .form__messages-error {
    -webkit-transform: translateX(3%);
    transform: translateX(3%); } }

@media only screen and (max-width: 42em) {
  .blog {
    width: 80vw;
    right: -8vw; }
  .blog__post {
    display: block;
    overflow: hidden;
    background-color: #F4F4F4;
    margin-left: -2vw;
    margin: 4vh 2vh 0vh 2vh; }
  .blog__picture {
    max-height: 35vh;
    max-width: 60vw;
    overflow: hidden; }
  .blog__content {
    max-height: 35vh;
    max-width: 60vw;
    display: inline-block; }
  .blog__title {
    display: block;
    max-height: 2vh;
    max-width: auto;
    font-size: 2.5rem;
    margin-bottom: 2vh; }
  .blog__text {
    display: inline-block;
    max-height: 20vh;
    max-width: auto;
    font-size: 2rem; }
  .blog__button {
    max-height: 8vh;
    max-width: 12vw;
    padding: 1vh;
    font-size: 2rem; }
  .post__picture {
    height: auto;
    width: 80vw;
    -webkit-transform: translateX(-15.5%);
    transform: translateX(-15.5%); }
  .post__content {
    width: 80vw;
    -webkit-transform: translateX(-15.5%);
    transform: translateX(-15.5%); }
  .post__title {
    margin-left: 10vh;
    font-size: 4rem;
    padding-top: 2vh;
    padding-bottom: 1vh; }
  .post__text {
    font-size: 2rem; }
  .post__buttons {
    -webkit-transform: translateX(-1.5%);
    transform: translateX(-1.5%); }
  .header a {
    font-size: 2rem; }
  .header__slides a {
    font-size: 1.5rem; }
  .header__copyright {
    font-size: 1.25rem; }
  .header__copyright a {
    display: block;
    font-size: 2rem; }
  .row-1::before {
    font-size: 2rem; }
  .row-2::before {
    font-size: 2rem; }
  .gallery {
    -webkit-transform: translateX(-20%);
    transform: translateX(-20%);
    height: 120vh;
    width: 120vw;
    margin-top: -15vh;
    z-index: -10; }
  .images {
    display: block;
    left: 50%;
    top: 50%;
    -webkit-transform: translate(-52%, -50%);
    transform: translate(-52%, -50%); }
  .row {
    margin-left: -16vw; }
  .gallery__thumbnail,
  .gallery__thumbnail-ps {
    display: block;
    margin-bottom: 2rem;
    margin-top: 2rem;
    height: 30vh;
    margin: 5vh auto; }
  .large {
    display: none; }
  .slideshow__picture {
    top: 50%;
    left: 50%; }
  .slideshow__slide {
    top: 104%;
    bottom: 50%; }
  .medium {
    display: block; }
  .images {
    margin-left: 18rem; }
  .profile__picture {
    text-align: center;
    margin-left: 16vw;
    margin-bottom: 4vh; } }

@media only screen and (max-width: 41em) {
  html {
    font-size: 43.75%; } }

@media only screen and (max-width: 39em) {
  .profile__picture {
    margin-left: 16vw; } }

@media only screen and (max-width: 36em) {
  html {
    font-size: 37.5%; }
  .profile__picture {
    margin-left: 14vw; }
  .header__description {
    top: 51vh; }
  .form {
    font-size: 2rem; }
  .form__messages {
    font-size: 2.75rem; }
  .form__messages-error {
    -webkit-transform: translateX(3%);
    transform: translateX(3%); }
  input[type=text],
  input[type=email],
  select,
  textarea {
    font-size: 2rem;
    width: 30vw; } }

@media only screen and (max-width: 34em) {
  .profile__picture {
    margin-left: 12vw; } }

@media only screen and (max-width: 31em) {
  html {
    font-size: 31.25%; }
  .profile__picture {
    margin-left: 10vw; }
  .header__description {
    top: 51vh; } }

@media only screen and (max-width: 30em) {
  .profile__picture {
    margin-left: 8vw; } }

@media only screen and (max-width: 29em) {
  .profile__picture {
    margin-left: 6vw; }
  .slideshow {
    -webkit-transform: translateX(-6%);
    transform: translateX(-6%); } }

@media only screen and (max-width: 27em) {
  .profile__picture {
    margin-left: 4vw; }
  .row {
    margin-left: -8vw; } }

@media only screen and (max-width: 26em) {
  html {
    font-size: 26%; }
  .large {
    display: none; }
  .medium {
    display: none; }
  .small {
    display: block; }
  .profile__picture {
    margin-left: 12vw; }
  .profile__description {
    margin-top: 2vh; }
  .header a {
    font-size: 2.5rem; }
  .header__slides a {
    font-size: 2rem; }
  .header__copyright a {
    font-size: 2rem; }
  .row-1::before {
    font-size: 3rem; }
  .row-2::before {
    font-size: 3rem; }
  .header__description {
    top: 49.5vh; } }

@media only screen and (max-width: 25em) {
  .blog__title {
    font-size: .8rem; }
  .profile__picture {
    margin-left: 12vw; } }

@media only screen and (max-width: 24em) {
  .profile__picture {
    margin-left: 10vw; }
  .row {
    margin-left: -12vw; } }

@media only screen and (max-width: 23em) {
  .profile__picture {
    margin-left: 8vw; } }

@media only screen and (max-width: 22em) {
  html {
    font-size: 22.5%; }
  .header__copyright {
    font-size: .6rem; }
  .row-1::before {
    font-size: 4rem; }
  .row-2::before {
    font-size: 4rem; }
  .profile__picture {
    margin-left: 6vw; }
  .header {
    /* move header up and place it horizontally at the top of the page for mobile */ }
  .post__buttons {
    /* replace posts with simple next, prev and all buttons */ } }

@media only screen and (max-width: 17em) {
  html {
    font-size: 12.5%; }
  .profile__picture {
    margin-left: 2vw; }
  textarea {
    -webkit-transform: translateX(-12%);
    transform: translateX(-12%); }
  input[type=submit] {
    -webkit-transform: translateX(30%);
    transform: translateX(30%); } }

@media only screen and (max-width: 16em) {
  .profile__picture {
    margin-left: 0vw; } }

/*# sourceMappingURL=data:application/json;base64, */
